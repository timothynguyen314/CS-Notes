MULTI LEVEL FEEDBACK QUEUE

Optimize both turnaround and response times w/o knowing anything about the process.

There are different queues w/ varying priorities.
Those of the same priority run in Round-Robin mode.
Only the highest priority runs.

Observe a process behavior:
	if it uses CPU a lot, put it in low priority.
	if it gives up the CPU frequently to go into I/O, put it in high priority.

	Use the history of a job to predict its future.

How to change priority?

Attempt #1:
	When a job entes, put it in highest prioirty.
	If it's not done by the end of a time slice, move it down a priority.
	If so, keep it on the priority level.

	Problem:
		"starvation" of long jobs if there's a lot of short jobs
		"gaming the scheduler" - a job that should take a long time will do a pointless I/O before the end of a time slice, cheating so it can stay on the same priority

Attempt #2:
	After some time, "boost" priority of all jobs, by moving them all to the top queue.
	This fixes starvation.
	This fixes the problem if a job is varied (slow in the beginning, interactive in the end)

	Problem: what time should we use?
		if it's too long, we get starvation.
		if it's too short, we have too much stuff on the top priority queue.

Attempt #3:
	"accounting" - keep track of total time a process is on a queue, and after a certain amount of time, move down in priority
	Fixes the gaming the scheduler problem