INTERPROCESS COMMUNICATION

This is the study of exchange of data between streams.

Simple Uni-Directional Byte Streams
	Pipes are opened by parents and inherited by children. It's simple input/output.
	Each program in the pipeline is independent and is unaware the other exists.
	The program opening the pipeline is responsible for making sure the other program can take it as input.
	No encryption of data going through.

	A pipe is really just a temporary file that holds data between streams.
	If the write file descriptor is open, the pipe writes to a reader.
	If the read file descriptor is open, we may write to the pipe.
	When both descriptors are closed, the file is deleted.

Named Pipes and Mailboxes
	A named pipe is like a persistent pipe, a file that remains--a reader/writer must call it by name, instead of just pipe().
	Thus read/write doesn't have to happen at the same time. And instead of between a child and parent, a named pipe can happen between two different processes.

	On the other hand, a mailbox deals w messages, not streams.
	Each write has ID about the sender, while a named pipe has no such thing.
	Mailboxes also deal w/ failed sends better, keeping unprocessed messages in the mailbox for the next reader, while named pipes are not as good.

General Network Connections
	Now we're going beyond operating on a single operating system.
	These use sockets.
	Thus we should be able to interact between different OS's, deal w security, find servers, and deal w connection failures.
	Obviously more complex and slower.

Shared Memory
	The fastest and most efficient way to move data between two processes.
	Each process maps to the same file in its virtual address space.

	This can only happen between processes on the same memory bus.
	There is also no authentication of which data came from which process.

Network Connections and Out-of-Band Signals
	Data sent to a network connection is FIFO.
	We'd have to send an out-of-band signal to send an important message directly to the front. It would go through a different channel than the one for normal requests.