HEURISTICS

If the total # of nodes generated by A* is N, and the solution depth is d, then the effective branching factor b* is
N+1 = 1+ b* + (b*)^2 + ... + (b*)^d
A well designed heuristic wants a b* close to 1.

A heuristic "dominates" another if it is always better than the other.

One way of finding a heuristic is looking at a "relaxed problem" where rules are relaxed. Often takes the form of a "supergraph" with added edges to the graph.

One can also look at "subproblems".
A "pattern database" stores costs for each subproblem.
Then for each complete state we arrive at, we look up the corresponding subproblem heuristic.
In a "disjoint pattern database", subproblems don't overlap in moves, and so we can add them together.

One can also learn from experience.